<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[一念天堂]]></title>
  <link href="http://kdcc.github.io/atom.xml" rel="self"/>
  <link href="http://kdcc.github.io/"/>
  <updated>2017-11-26T17:14:33+08:00</updated>
  <id>http://kdcc.github.io/</id>
  <author>
    <name><![CDATA[kd]]></name>
    <email><![CDATA[liangkaidong@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Playframework Silhouette 用户框架官方文档整理]]></title>
    <link href="http://kdcc.github.io/blog/2017/11/23/silhouette3/"/>
    <updated>2017-11-23T18:11:01+08:00</updated>
    <id>http://kdcc.github.io/blog/2017/11/23/silhouette3</id>
    <content type="html"><![CDATA[<p>本文整合下 <a href="https://www.silhouette.rocks/docs">Silhouette 官方文档</a> 要点，纯粹摘录以备忘，完整请参考原链。</p>

<!-- more -->


<h2>Environment</h2>

<blockquote><p>An application can provide different environments for different environment types. With this it&rsquo;s possible to create endpoints that can handle different identitity -> authenticator combinations.</p></blockquote>

<h2>RequestHandler</h2>

<blockquote><p>In Silhouette, request handlers are the foundation to handle secured endpoints and the building blocks for the more specific action types. A request handler can execute an arbitrary block of code and must return a HandlerResult.</p>

<p>There exists a SecuredRequestHandler which intercepts requests and checks if there is an authenticated user. If there is one, the execution continues and the enclosed code is invoked.</p></blockquote>

<figure class='code'><figcaption><span>SecuredRequestHandler </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">def</span> <span class="n">securedRequestHandler</span> <span class="k">=</span> <span class="nc">Action</span><span class="o">.</span><span class="n">async</span> <span class="o">{</span> <span class="k">implicit</span> <span class="n">request</span> <span class="k">=&gt;</span>
</span><span class='line'>  <span class="n">silhouette</span><span class="o">.</span><span class="nc">SecuredRequestHandler</span> <span class="o">{</span> <span class="n">securedRequest</span> <span class="k">=&gt;</span>
</span><span class='line'>    <span class="nc">Future</span><span class="o">.</span><span class="n">successful</span><span class="o">(</span><span class="nc">HandlerResult</span><span class="o">(</span><span class="nc">Ok</span><span class="o">,</span> <span class="nc">Some</span><span class="o">(</span><span class="n">securedRequest</span><span class="o">.</span><span class="n">identity</span><span class="o">)))</span>
</span><span class='line'>  <span class="o">}.</span><span class="n">map</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="nc">HandlerResult</span><span class="o">(</span><span class="n">r</span><span class="o">,</span> <span class="nc">Some</span><span class="o">(</span><span class="n">user</span><span class="o">))</span> <span class="k">=&gt;</span> <span class="nc">Ok</span><span class="o">(</span><span class="nc">Json</span><span class="o">.</span><span class="n">toJson</span><span class="o">(</span><span class="n">user</span><span class="o">.</span><span class="n">loginInfo</span><span class="o">))</span>
</span><span class='line'>    <span class="k">case</span> <span class="nc">HandlerResult</span><span class="o">(</span><span class="n">r</span><span class="o">,</span> <span class="nc">None</span><span class="o">)</span> <span class="k">=&gt;</span> <span class="nc">Unauthorized</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Silhouette provides a replacement for Play’s built in Action class named <strong>SecuredAction</strong> which is based on the SecuredRequestHandler</p>

<figure class='code'><figcaption><span>SecuredAction </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">def</span> <span class="n">index</span> <span class="k">=</span> <span class="n">silhouette</span><span class="o">.</span><span class="nc">SecuredAction</span> <span class="o">{</span> <span class="k">implicit</span> <span class="n">request</span> <span class="k">=&gt;</span>
</span><span class='line'>  <span class="nc">Ok</span><span class="o">(</span><span class="n">views</span><span class="o">.</span><span class="n">html</span><span class="o">.</span><span class="n">index</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="n">identity</span><span class="o">))</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Error handlers</h2>

<blockquote><p>If the access to an endpoint will be denied then it&rsquo;s possible to provide an error handler to handle the incoming request and return an appropriate result.</p>

<p>Every request handler may provide it&rsquo;s own error handler implementation.</p></blockquote>

<p>All different types of error handlers:</p>

<blockquote><p>Local error handlers</p>

<p>Exception handler</p>

<p>UnsecuredErrorHandler</p>

<p>SecuredErrorHandler</p></blockquote>

<figure class='code'><figcaption><span>SecuredErrorHandler </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">class</span> <span class="nc">CustomSecuredErrorHandler</span> <span class="k">extends</span> <span class="nc">SecuredErrorHandler</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">    * Called when a user is not authenticated.</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>  <span class="k">override</span> <span class="k">def</span> <span class="n">onNotAuthenticated</span><span class="o">(</span><span class="k">implicit</span> <span class="n">request</span><span class="k">:</span> <span class="kt">RequestHeader</span><span class="o">)</span> <span class="k">=</span> <span class="o">{</span>
</span><span class='line'>    <span class="nc">Future</span><span class="o">.</span><span class="n">successful</span><span class="o">(</span><span class="nc">Unauthorized</span><span class="o">)</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">    * Called when a user is authenticated but not authorized.</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>  <span class="k">override</span> <span class="k">def</span> <span class="n">onNotAuthorized</span><span class="o">(</span><span class="k">implicit</span> <span class="n">request</span><span class="k">:</span> <span class="kt">RequestHeader</span><span class="o">)</span> <span class="k">=</span> <span class="o">{</span>
</span><span class='line'>    <span class="nc">Future</span><span class="o">.</span><span class="n">successful</span><span class="o">(</span><span class="nc">Forbidden</span><span class="o">)</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// bind it in SilhouetteModule.scala</span>
</span><span class='line'><span class="o">..</span>
</span><span class='line'><span class="n">bind</span><span class="o">[</span><span class="kt">SecuredErrorHandler</span><span class="o">].</span><span class="n">to</span><span class="o">[</span><span class="kt">CustomSecuredErrorHandler</span><span class="o">]</span>
</span><span class='line'><span class="o">..</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Filters</h2>

<blockquote><p>Play provides a simple filter API for applying global filters to each request. Such a filter is basically the same as an action. It produces a request and returns a result.</p>

<p>So it&rsquo;s possible to use the actions provided by Silhouette inside a filter to create a global authentication mechanism.</p></blockquote>

<figure class='code'><figcaption><span>Filter </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">class</span> <span class="nc">SecuredFilter</span> <span class="nd">@Inject</span><span class="o">()</span> <span class="o">(</span><span class="n">silhouette</span><span class="k">:</span> <span class="kt">Silhouette</span><span class="o">[</span><span class="kt">DefaultEnv</span><span class="o">],</span> <span class="n">bodyParsers</span><span class="k">:</span> <span class="kt">PlayBodyParsers</span><span class="o">)</span> <span class="k">extends</span> <span class="nc">Filter</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">override</span> <span class="k">def</span> <span class="n">apply</span><span class="o">(</span><span class="n">next</span><span class="k">:</span> <span class="kt">RequestHeader</span> <span class="o">=&gt;</span> <span class="nc">Future</span><span class="o">[</span><span class="kt">Result</span><span class="o">])(</span>
</span><span class='line'>    <span class="n">request</span><span class="k">:</span> <span class="kt">RequestHeader</span><span class="o">)</span><span class="k">:</span> <span class="kt">Future</span><span class="o">[</span><span class="kt">Result</span><span class="o">]</span> <span class="k">=</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// As the body of request can&#39;t be parsed twice in Play we should force </span>
</span><span class='line'>    <span class="c1">// to parse empty body for UserAwareAction</span>
</span><span class='line'>    <span class="k">val</span> <span class="n">action</span> <span class="k">=</span> <span class="n">silhouette</span><span class="o">.</span><span class="nc">UserAwareAction</span><span class="o">.</span><span class="n">async</span><span class="o">(</span><span class="n">bodyParsers</span><span class="o">.</span><span class="n">empty</span><span class="o">)</span> <span class="o">{</span> <span class="n">r</span> <span class="k">=&gt;</span>
</span><span class='line'>      <span class="n">request</span><span class="o">.</span><span class="n">path</span> <span class="k">match</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="s">&quot;/admin&quot;</span> <span class="k">if</span> <span class="n">r</span><span class="o">.</span><span class="n">identity</span><span class="o">.</span><span class="n">isEmpty</span> <span class="k">=&gt;</span> <span class="nc">Future</span><span class="o">.</span><span class="n">successful</span><span class="o">(</span><span class="nc">Unauthorized</span><span class="o">)</span>
</span><span class='line'>        <span class="k">case</span> <span class="k">_</span> <span class="k">=&gt;</span> <span class="n">next</span><span class="o">(</span><span class="n">request</span><span class="o">)</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">action</span><span class="o">(</span><span class="n">request</span><span class="o">).</span><span class="n">run</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Authorization</h2>

<blockquote><p>Silhouette provides a way to add authorization logic to your secured endpoints. This is done by implementing an Authorization object that is passed to all SecuredRequestHandler and SecuredAction as a parameter.</p></blockquote>

<figure class='code'><figcaption><span>Filter </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">trait</span> <span class="nc">Authorization</span><span class="o">[</span><span class="kt">I</span> <span class="k">&lt;:</span> <span class="kt">Identity</span>, <span class="kt">A</span> <span class="k">&lt;:</span> <span class="kt">Authenticator</span><span class="o">]</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">   * Checks whether the user is authorized to execute an endpoint or not.</span>
</span><span class='line'><span class="cm">   *</span>
</span><span class='line'><span class="cm">   * @param identity The current identity instance.</span>
</span><span class='line'><span class="cm">   * @param authenticator The current authenticator instance.</span>
</span><span class='line'><span class="cm">   * @param request The current request.</span>
</span><span class='line'><span class="cm">   * @tparam B The type of the request body.</span>
</span><span class='line'><span class="cm">   * @return True if the user is authorized, false otherwise.</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">isAuthorized</span><span class="o">[</span><span class="kt">B</span><span class="o">](</span><span class="n">identity</span><span class="k">:</span> <span class="kt">I</span><span class="o">,</span> <span class="n">authenticator</span><span class="k">:</span> <span class="kt">A</span><span class="o">)(</span>
</span><span class='line'>    <span class="k">implicit</span> <span class="n">request</span><span class="k">:</span> <span class="kt">Request</span><span class="o">[</span><span class="kt">B</span><span class="o">])</span><span class="k">:</span> <span class="kt">Future</span><span class="o">[</span><span class="kt">Boolean</span><span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">case</span> <span class="k">class</span> <span class="nc">WithProvider</span><span class="o">(</span><span class="n">provider</span><span class="k">:</span> <span class="kt">String</span><span class="o">)</span> <span class="k">extends</span> <span class="nc">Authorization</span><span class="o">[</span><span class="kt">User</span>, <span class="kt">CookieAuthenticator</span><span class="o">]</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="n">isAuthorized</span><span class="o">[</span><span class="kt">B</span><span class="o">](</span><span class="n">user</span><span class="k">:</span> <span class="kt">User</span><span class="o">,</span> <span class="n">authenticator</span><span class="k">:</span> <span class="kt">CookieAuthenticator</span><span class="o">)(</span>
</span><span class='line'>    <span class="k">implicit</span> <span class="n">request</span><span class="k">:</span> <span class="kt">Request</span><span class="o">[</span><span class="kt">B</span><span class="o">])</span> <span class="k">=</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nc">Future</span><span class="o">.</span><span class="n">successful</span><span class="o">(</span><span class="n">user</span><span class="o">.</span><span class="n">loginInfo</span><span class="o">.</span><span class="n">providerID</span> <span class="o">==</span> <span class="n">provider</span><span class="o">)</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Application</span><span class="o">(</span><span class="n">silhouette</span><span class="k">:</span> <span class="kt">Silhouette</span><span class="o">[</span><span class="kt">DefaultEnv</span><span class="o">])</span> <span class="k">extends</span> <span class="nc">Controller</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="n">myAction</span> <span class="k">=</span> <span class="n">silhouette</span><span class="o">.</span><span class="nc">SecuredAction</span><span class="o">(</span><span class="nc">WithProvider</span><span class="o">(</span><span class="s">&quot;twitter&quot;</span><span class="o">))</span> <span class="o">{</span> <span class="k">implicit</span> <span class="n">request</span> <span class="k">=&gt;</span>
</span><span class='line'>    <span class="c1">// do something here</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can use the logical <code>!</code>, <code>&amp;&amp;</code> and <code>||</code> operators to create logical expressions with your Authorization instances. You also need to have an implicit ExecutionContext in scope.</p>

<h2>Iddentity</h2>

<blockquote><p>Silhouette defines a user through its Identity trait. This trait doesn&rsquo;t define any defaults. Thus, you are free to design your user according to your needs.</p>

<p>The LoginInfo case class acts as Silhouette’s identity ID, and it helps identify users in the Silhouette workflow.</p></blockquote>

<figure class='code'><figcaption><span>IdentityService </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">class</span> <span class="nc">UserService</span><span class="o">(</span><span class="n">userDAO</span><span class="k">:</span> <span class="kt">UserDAO</span><span class="o">)</span> <span class="k">extends</span> <span class="nc">IdentityService</span><span class="o">[</span><span class="kt">User</span><span class="o">]</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">   * Retrieves a user that matches the specified login info.</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">retrieve</span><span class="o">(</span><span class="n">loginInfo</span><span class="k">:</span> <span class="kt">LoginInfo</span><span class="o">)</span><span class="k">:</span> <span class="kt">Future</span><span class="o">[</span><span class="kt">Option</span><span class="o">[</span><span class="kt">User</span><span class="o">]]</span> <span class="k">=</span> <span class="n">userDAO</span><span class="o">.</span><span class="n">findByLoginInfo</span><span class="o">(</span><span class="n">loginInfo</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Authenticator &amp; Authenticator Service</h2>

<blockquote><p>Authenticator recognizes a user on every request after a successful authentication.</p>

<p>It&rsquo;s a small class which stores only some data like its validity and the linked login information for an identity</p></blockquote>

<ul>
<li><p>Every Authenticator has an associated <strong>Authenticator Service</strong> which implements the Authenticator&rsquo;s functionality. This service is responsible for the following actions:</p>

<ol>
<li><p><em>Create</em> an Authenticator</p>

<blockquote><p>Creates a new Authenticator from the an identity&rsquo;s login information. This action should be executed after a successful authentication.</p>

<p>The created Authenticator can then be used to recognize the user on every subsequent request.</p></blockquote></li>
<li><p><em>Initialize</em> an Authenticator</p></li>
<li><p><em>Embed</em> an Authenticator</p>

<blockquote><p>After initialization, an Authenticator must be embedded into a Play framework request or result. Embedding the Authenticator-related data into the result means that the data will be sent to the client.</p>

<p>It may also be useful to embed the Authenticator-related data into an incoming request to lead a Silhouette endpoint to believe that the request is a new request which contains a valid Authenticator. This is typically done in tests or Play filters.</p></blockquote></li>
<li><p><em>Touch</em> an Authenticator</p></li>
<li><p><em>Update</em> an Authenticator</p>

<blockquote><p>Automatically updates the state of an Authenticator on every request to a Silhouette endpoint. Updated Authenticators will be embedded into the Play framework result before sending it to the client.</p>

<p>If the service uses a backing store, then the Authenticator instance will be updated in the store, too.</p></blockquote></li>
<li><p><em>Renew</em> an Authenticator</p>

<blockquote><p>Authenticators have a fixed expiration date. With this method it is possible to renew the expiration of an Authenticator by discarding the old one and creating a new one.</p></blockquote></li>
<li><p><em>Discard</em> an Authenticator</p></li>
</ol>
</li>
<li><p>Different types of Authenticator:</p>

<ol>
<li>CookieAuthenticator

<blockquote><p>It works either by storing an ID in a cookie to track the authenticated user and a server-side backing store that maps the ID to an Authenticator instance or by a stateless approach that stores the Authenticator in a serialized form directly into the cookie.</p></blockquote></li>
<li>SessionAuthenticator

<blockquote><p>It works by storing a serialized authenticator instance in the Play Framework session cookie.</p></blockquote></li>
<li>BearerTokenAuthenticator

<blockquote><p>It works by transporting a token in a user-defined header to track the authenticated user and a server-side backing store that maps the token to an Authenticator instance.</p></blockquote></li>
<li>JWTAuthenticator

<blockquote><p>The JWTAuthenticator uses a header-based approach with the help of a [JWT] (JSON Web Token). It works by using a JWT to transport the Authenticator data inside a user-defined header. It can be stateless with the disadvantages that the JWT can’t be invalidated.</p>

<p>The stateful or stateless approach is selected depending on whether a AuthenticatorRepository was supplied to the authenticator service.</p></blockquote></li>
<li>DummyAuthenticator</li>
</ol>
</li>
</ul>


<h2>Provider</h2>

<blockquote><p>In Silhouette a provider is a service that handles the authentication of an identity. It typically reads authorization information and returns information about an identity.</p></blockquote>

<h2>Persistence</h2>

<p>Silhouette has only two points where it needs to read or write data from an underlying persistence layer:</p>

<ul>
<li><p>Authenticators</p>

<blockquote><p>Some authenticators have the need to persistent either the complete authenticator or parts of the authenticator in a backing store. These kind of authenticators have a dependency to the AuthenticatorRepository which provides a well defined interface</p></blockquote></li>
<li><p>Providers</p>

<blockquote><p>Currently the password based providers like the BasicAuthProvider or the CredentialsProvider needs the ability to read the PasswordInfo from a persistence layer during authentication.</p>

<p>These kind of providers have a dependency to the AuthInfoRepository, which provides a well defined interface, that can be implemented to persistent the AuthInfo into any kind of data storage.</p></blockquote></li>
</ul>


<figure class='code'><figcaption><span>Persistence</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'>  <span class="n">libraryDependencies</span> <span class="o">++=</span> <span class="nc">Seq</span><span class="o">(</span>
</span><span class='line'>  <span class="s">&quot;com.mohiva&quot;</span> <span class="o">%%</span> <span class="s">&quot;play-silhouette-persistence&quot;</span> <span class="o">%</span> <span class="s">&quot;4.0.0&quot;</span>
</span><span class='line'>  <span class="o">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nc">In</span> <span class="n">the</span> <span class="n">package</span><span class="o">,</span> <span class="n">there</span> <span class="n">are</span><span class="k">:</span>
</span><span class='line'>  <span class="kt">CacheAuthenticatorRepository</span>
</span><span class='line'>    <span class="nc">An</span> <span class="n">implementation</span> <span class="n">of</span> <span class="n">the</span> <span class="nc">AuthenticatorRepository</span> <span class="n">which</span> <span class="n">uses</span> <span class="n">a</span> <span class="n">cache</span> <span class="n">to</span> <span class="n">store</span> <span class="n">the</span> <span class="n">authenticator</span> <span class="n">artifacts</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'>  <span class="nc">DelegableAuthInfoRepository</span>
</span><span class='line'>    <span class="nc">An</span> <span class="n">implementation</span> <span class="n">of</span> <span class="n">the</span> <span class="nc">AuthInfoRepository</span> <span class="n">which</span> <span class="n">delegates</span> <span class="n">the</span> <span class="n">storage</span> <span class="n">of</span> <span class="n">an</span> <span class="nc">AuthInfo</span> <span class="n">instance</span> <span class="n">to</span> <span class="n">its</span> <span class="n">appropriate</span> <span class="nc">DAO</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Rate limiting</h2>

<blockquote><p>You can do this with <a href="https://github.com/sief/play-guard">play-guard</a>.</p></blockquote>

<figure class='code'><figcaption><span>Rate limiting </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'>  <span class="k">object</span> <span class="nc">UserLimiter</span> <span class="o">{...}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="nc">MyController</span> <span class="nd">@Inject</span><span class="o">()(</span><span class="n">silhouette</span><span class="k">:</span> <span class="kt">Silhouette</span><span class="o">[</span><span class="kt">MyEnv</span><span class="o">])(</span><span class="k">implicit</span> <span class="n">ac</span><span class="k">:</span> <span class="kt">ActorSystem</span><span class="o">)</span> <span class="k">extends</span> <span class="nc">Controller</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">private</span> <span class="k">val</span> <span class="n">defaultUserFilter</span> <span class="k">=</span> <span class="nc">UserLimiter</span><span class="o">.</span><span class="n">defaultUserFilter</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="n">myAction</span><span class="k">:</span> <span class="kt">Action</span><span class="o">[</span><span class="kt">AnyContent</span><span class="o">]</span> <span class="k">=</span> <span class="o">(</span><span class="n">silhouette</span><span class="o">.</span><span class="nc">SecuredAction</span> <span class="n">andThen</span> <span class="n">defaultUserFilter</span><span class="o">).</span><span class="n">async</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">implicit</span> <span class="n">request</span> <span class="k">=&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//..Your custom logic here</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Events</h2>

<blockquote><p>Silhouette provides event handling based on Akka’s Event Bus.</p></blockquote>

<h2>Logging</h2>

<figure class='code'><figcaption><span>log setting </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'>  <span class="o">&lt;</span><span class="n">configuration</span> <span class="n">debug</span><span class="o">=</span><span class="s">&quot;false&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="n">logger</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;com.mohiva&quot;</span> <span class="n">level</span><span class="o">=</span><span class="s">&quot;ERROR&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="n">logger</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;com.mohiva.play.silhouette.api.Silhouette&quot;</span> <span class="n">level</span><span class="o">=</span><span class="s">&quot;INFO&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'>  <span class="o">&lt;/</span><span class="n">configuration</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>To use the named logger you only need to mix the Logger trait into your class or trait.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playframework Silhouette 用户框架之权限校验篇]]></title>
    <link href="http://kdcc.github.io/blog/2017/11/21/silhouette2/"/>
    <updated>2017-11-21T17:31:00+08:00</updated>
    <id>http://kdcc.github.io/blog/2017/11/21/silhouette2</id>
    <content type="html"><![CDATA[<p><a href="http://kdleong.com/blog/2017/11/21/silhouette1/">上篇</a> 说到了客户发送 <code>用户名+密码</code> 请求 <code>注册/登录</code> 后，后台先通过密码校验，再通过 AuthenticatorService 来创建 Authenticator 进而生成 <code>token</code>，本篇就来说说客户拿到该 <code>token</code> 后如何敲进后台的大门。</p>

<!-- more -->


<ul>
<li>探秘 SecuredAction</li>
</ul>


<figure class='code'><figcaption><span>SecuredAction 做了啥 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="c1">// 你没看错，在 controller 中校验就是这么简洁</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Application</span><span class="o">(</span><span class="n">silhouette</span><span class="k">:</span> <span class="kt">Silhouette</span><span class="o">[</span><span class="kt">DefaultEnv</span><span class="o">])</span> <span class="k">extends</span> <span class="nc">Controller</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="n">myAction</span> <span class="k">=</span> <span class="n">silhouette</span><span class="o">.</span><span class="nc">SecuredAction</span><span class="o">()</span> <span class="o">{</span> <span class="k">implicit</span> <span class="n">request</span> <span class="k">=&gt;</span>
</span><span class='line'>    <span class="c1">// do something here</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 回顾一下 Environment 用了我写的 UserService 进行装配</span>
</span><span class='line'><span class="nd">@Provides</span>
</span><span class='line'><span class="k">def</span> <span class="n">provideEnvironment</span><span class="o">(</span>
</span><span class='line'>  <span class="n">userService</span><span class="k">:</span> <span class="kt">UserService</span><span class="o">,</span>
</span><span class='line'>  <span class="n">authenticatorService</span><span class="k">:</span> <span class="kt">AuthenticatorService</span><span class="o">[</span><span class="kt">JWTAuthenticator</span><span class="o">],</span>
</span><span class='line'>  <span class="n">eventBus</span><span class="k">:</span> <span class="kt">EventBus</span><span class="o">)</span><span class="k">:</span> <span class="kt">Environment</span><span class="o">[</span><span class="kt">JWTEnv</span><span class="o">]</span> <span class="k">=</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nc">Environment</span><span class="o">[</span><span class="kt">JWTEnv</span><span class="o">](</span>
</span><span class='line'>    <span class="n">userService</span><span class="o">,</span>
</span><span class='line'>    <span class="n">authenticatorService</span><span class="o">,</span>
</span><span class='line'>    <span class="nc">Seq</span><span class="o">.</span><span class="n">empty</span><span class="o">,</span>
</span><span class='line'>    <span class="n">eventBus</span>
</span><span class='line'>  <span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// UserService 继承 IdentityService 并实现了 retrieve</span>
</span><span class='line'><span class="k">class</span> <span class="nc">UserService</span> <span class="nd">@Inject</span><span class="o">()(</span><span class="n">userDAO</span><span class="k">:</span> <span class="kt">UserDAO</span><span class="o">)</span> <span class="k">extends</span>
</span><span class='line'>  <span class="nc">IdentityService</span><span class="o">[</span><span class="kt">MyIdentity</span><span class="o">]</span> <span class="k">with</span> <span class="nc">Logger</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">    * Retrieves a user that matches the specified login info.</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">retrieve</span><span class="o">(</span><span class="n">loginInfo</span><span class="k">:</span> <span class="kt">LoginInfo</span><span class="o">)</span><span class="k">:</span> <span class="kt">Future</span><span class="o">[</span><span class="kt">Option</span><span class="o">[</span><span class="kt">MyIdentity</span><span class="o">]]</span> <span class="k">=</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">val</span> <span class="n">userID</span> <span class="k">=</span> <span class="n">loginInfo</span><span class="o">.</span><span class="n">providerKey</span>
</span><span class='line'>    <span class="n">userDAO</span><span class="o">.</span><span class="n">getUserInfo</span><span class="o">(</span><span class="n">userID</span><span class="o">)</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>  这样 SecuredAction 在背后做的事情就是：</p>

<blockquote><ol>
<li>解析 request header ，按预先 JWT 协议读取 token 并解析出 LoginInfo</li>
<li>调用 UserService.retrieve 去获取用户信息(identity)</li>
<li>如果拿到有效信息，将用户信息塞进 request.identity 中传给后面的代码，否则跳过后面代码（至于到哪去，下篇详解）</li>
</ol>
</blockquote>

<ul>
<li>通过自定义 <code>授权校验类</code> 进行 <code>客制化校验</code></li>
</ul>


<figure class='code'><figcaption><span>SecuredAction 做了啥 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">trait</span> <span class="nc">Authorization</span><span class="o">[</span><span class="kt">I</span> <span class="k">&lt;:</span> <span class="kt">Identity</span>, <span class="kt">A</span> <span class="k">&lt;:</span> <span class="kt">Authenticator</span><span class="o">]</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">   * Checks whether the user is authorized to execute an endpoint or not.</span>
</span><span class='line'><span class="cm">   *</span>
</span><span class='line'><span class="cm">   * @param identity The current identity instance.</span>
</span><span class='line'><span class="cm">   * @param authenticator The current authenticator instance.</span>
</span><span class='line'><span class="cm">   * @param request The current request.</span>
</span><span class='line'><span class="cm">   * @tparam B The type of the request body.</span>
</span><span class='line'><span class="cm">   * @return True if the user is authorized, false otherwise.</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">isAuthorized</span><span class="o">[</span><span class="kt">B</span><span class="o">](</span><span class="n">identity</span><span class="k">:</span> <span class="kt">I</span><span class="o">,</span> <span class="n">authenticator</span><span class="k">:</span> <span class="kt">A</span><span class="o">)(</span>
</span><span class='line'>    <span class="k">implicit</span> <span class="n">request</span><span class="k">:</span> <span class="kt">Request</span><span class="o">[</span><span class="kt">B</span><span class="o">])</span><span class="k">:</span> <span class="kt">Future</span><span class="o">[</span><span class="kt">Boolean</span><span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">case</span> <span class="k">class</span> <span class="nc">WithProvider</span><span class="o">(</span><span class="n">provider</span><span class="k">:</span> <span class="kt">String</span><span class="o">)</span> <span class="k">extends</span> <span class="nc">Authorization</span><span class="o">[</span><span class="kt">User</span>, <span class="kt">CookieAuthenticator</span><span class="o">]</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="n">isAuthorized</span><span class="o">[</span><span class="kt">B</span><span class="o">](</span><span class="n">user</span><span class="k">:</span> <span class="kt">User</span><span class="o">,</span> <span class="n">authenticator</span><span class="k">:</span> <span class="kt">CookieAuthenticator</span><span class="o">)(</span>
</span><span class='line'>    <span class="k">implicit</span> <span class="n">request</span><span class="k">:</span> <span class="kt">Request</span><span class="o">[</span><span class="kt">B</span><span class="o">])</span> <span class="k">=</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nc">Future</span><span class="o">.</span><span class="n">successful</span><span class="o">(</span><span class="n">user</span><span class="o">.</span><span class="n">loginInfo</span><span class="o">.</span><span class="n">providerID</span> <span class="o">==</span> <span class="n">provider</span><span class="o">)</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 用法</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Application</span><span class="o">(</span><span class="n">silhouette</span><span class="k">:</span> <span class="kt">Silhouette</span><span class="o">[</span><span class="kt">DefaultEnv</span><span class="o">])</span> <span class="k">extends</span> <span class="nc">Controller</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">myAction</span> <span class="k">=</span> <span class="n">silhouette</span><span class="o">.</span><span class="nc">SecuredAction</span><span class="o">(</span><span class="nc">WithProvider</span><span class="o">(</span><span class="s">&quot;twitter&quot;</span><span class="o">))</span> <span class="o">{</span> <span class="k">implicit</span> <span class="n">request</span> <span class="k">=&gt;</span>
</span><span class='line'>    <span class="c1">// do something here</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>核心小结

<ol>
<li>UserService <em>-Environment[JWTEnv]-></em> Silhouette</li>
<li>request header <em>-Silhouette.SecuredAction-></em> JWT -> LoginInfo</li>
<li>LoginInfo <em>-UserService.retrieve-></em> Option[Identity] <em>-Silhouette.SecuredAction-></em> request -> do something</li>
</ol>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playframework Silhouette 用户框架之基本配置和 Json Web Token 生成篇]]></title>
    <link href="http://kdcc.github.io/blog/2017/11/21/silhouette1/"/>
    <updated>2017-11-21T03:36:53+08:00</updated>
    <id>http://kdcc.github.io/blog/2017/11/21/silhouette1</id>
    <content type="html"><![CDATA[<ul>
<li>添加依赖</li>
</ul>


<figure class='code'><figcaption><span>build.sbt </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'>  <span class="n">libraryDependencies</span> <span class="o">++=</span> <span class="nc">Seq</span><span class="o">(</span><span class="s">&quot;com.mohiva&quot;</span> <span class="o">%%</span> <span class="s">&quot;play-silhouette&quot;</span> <span class="o">%</span> <span class="s">&quot;4.0.0&quot;</span><span class="o">,</span>
</span><span class='line'>  <span class="s">&quot;com.mohiva&quot;</span> <span class="o">%%</span> <span class="s">&quot;play-silhouette-password-bcrypt&quot;</span> <span class="o">%</span> <span class="s">&quot;4.0.0&quot;</span><span class="o">,</span>
</span><span class='line'>  <span class="s">&quot;com.mohiva&quot;</span> <span class="o">%%</span> <span class="s">&quot;play-silhouette-persistence&quot;</span> <span class="o">%</span> <span class="s">&quot;4.0.0&quot;</span> <span class="c1">// 如果想让 token stateful 就需引入</span>
</span><span class='line'>  <span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<ul>
<li>创建配置文件</li>
</ul>


<figure class='code'><figcaption><span>silhouette.conf </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="n">silhouette</span> <span class="o">{</span>
</span><span class='line'>  <span class="c1">// 定义 JWT 的 header 属性</span>
</span><span class='line'>  <span class="n">authenticator</span><span class="o">.</span><span class="n">headerName</span> <span class="k">=</span> <span class="s">&quot;X-Auth-Token&quot;</span> <span class="c1">// 在 http 头中的字段名</span>
</span><span class='line'>  <span class="n">authenticator</span><span class="o">.</span><span class="n">issuerClaim</span> <span class="k">=</span> <span class="s">&quot;waylens&quot;</span>
</span><span class='line'>  <span class="n">authenticator</span><span class="o">.</span><span class="n">encryptSubject</span> <span class="k">=</span> <span class="kc">false</span>
</span><span class='line'>  <span class="n">authenticator</span><span class="o">.</span><span class="n">authenticatorExpiry</span> <span class="k">=</span> <span class="s">&quot;365d&quot;</span>
</span><span class='line'>  <span class="n">authenticator</span><span class="o">.</span><span class="n">sharedSecret</span><span class="k">=</span> <span class="s">&quot;changeme&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">#</span> <span class="nc">Google</span> <span class="n">provider</span>
</span><span class='line'>  <span class="n">google</span><span class="o">.</span><span class="n">authorizationURL</span><span class="k">=</span>
</span><span class='line'>  <span class="n">google</span><span class="o">.</span><span class="n">accessTokenURL</span><span class="k">=</span>
</span><span class='line'>  <span class="n">google</span><span class="o">.</span><span class="n">redirectURL</span><span class="k">=</span>
</span><span class='line'>  <span class="n">google</span><span class="o">.</span><span class="n">clientID</span><span class="k">=</span>
</span><span class='line'>  <span class="n">google</span><span class="o">.</span><span class="n">clientSecret</span><span class="k">=</span>
</span><span class='line'>  <span class="n">google</span><span class="o">.</span><span class="n">scope</span><span class="k">=</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>创建依赖配置类 SilhouetteModule</li>
</ul>


<figure class='code'><figcaption><span>SilhouetteModule.scala </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">class</span> <span class="nc">EmptyIDGenerator</span> <span class="k">extends</span> <span class="nc">IDGenerator</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">generate</span><span class="k">:</span> <span class="kt">Future</span><span class="o">[</span><span class="kt">String</span><span class="o">]</span> <span class="k">=</span> <span class="nc">Future</span><span class="o">.</span><span class="n">successful</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 用 Guice 的 AbstractModule 把 Silhouette 的所有依赖装配起来</span>
</span><span class='line'><span class="cm"> * 注意后面的组件装配会依赖到前面的装配</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">SilhouetteModule</span> <span class="k">extends</span> <span class="nc">AbstractModule</span> <span class="k">with</span> <span class="nc">ScalaModule</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">   * Configures the module.</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">configure</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">bind</span><span class="o">[</span><span class="kt">UserDAO</span><span class="o">].</span><span class="n">to</span><span class="o">[</span><span class="kt">UserDAOPsqlImpl</span><span class="o">]</span>
</span><span class='line'>    <span class="n">bind</span><span class="o">[</span><span class="kt">CacheLayer</span><span class="o">].</span><span class="n">to</span><span class="o">[</span><span class="kt">PlayCacheLayer</span><span class="o">]</span>
</span><span class='line'>    <span class="n">bind</span><span class="o">[</span><span class="kt">OAuth2StateProvider</span><span class="o">].</span><span class="n">to</span><span class="o">[</span><span class="kt">DummyStateProvider</span><span class="o">]</span>
</span><span class='line'>    <span class="n">bind</span><span class="o">[</span><span class="kt">IDGenerator</span><span class="o">].</span><span class="n">to</span><span class="o">[</span><span class="kt">EmptyIDGenerator</span><span class="o">]</span>
</span><span class='line'>    <span class="n">bind</span><span class="o">[</span><span class="kt">PasswordHasher</span><span class="o">].</span><span class="n">toInstance</span><span class="o">(</span><span class="k">new</span> <span class="nc">BCryptPasswordHasher</span><span class="o">)</span>
</span><span class='line'>    <span class="n">bind</span><span class="o">[</span><span class="kt">EventBus</span><span class="o">].</span><span class="n">toInstance</span><span class="o">(</span><span class="nc">EventBus</span><span class="o">())</span>
</span><span class='line'>    <span class="n">bind</span><span class="o">[</span><span class="kt">Clock</span><span class="o">].</span><span class="n">toInstance</span><span class="o">(</span><span class="nc">Clock</span><span class="o">())</span>
</span><span class='line'>    <span class="n">bind</span><span class="o">[</span><span class="kt">Silhouette</span><span class="o">[</span><span class="kt">JWTEnv</span><span class="o">]].</span><span class="n">to</span><span class="o">[</span><span class="kt">SilhouetteProvider</span><span class="o">[</span><span class="kt">JWTEnv</span><span class="o">]]</span>
</span><span class='line'>    <span class="n">bind</span><span class="o">[</span><span class="kt">SecuredErrorHandler</span><span class="o">].</span><span class="n">to</span><span class="o">[</span><span class="kt">JsonResponseErrorHandler</span><span class="o">]</span>
</span><span class='line'>    <span class="n">bind</span><span class="o">[</span><span class="kt">AuthenticatorEncoder</span><span class="o">].</span><span class="n">to</span><span class="o">[</span><span class="kt">Base64AuthenticatorEncoder</span><span class="o">]</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Provides</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">provideHTTPLayer</span><span class="o">(</span><span class="n">client</span><span class="k">:</span> <span class="kt">WSClient</span><span class="o">)</span><span class="k">:</span> <span class="kt">HTTPLayer</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">PlayHTTPLayer</span><span class="o">(</span><span class="n">client</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Provides</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">provideAuthenticatorService</span><span class="o">(</span>
</span><span class='line'>    <span class="n">cacheLayer</span><span class="k">:</span> <span class="kt">CacheLayer</span><span class="o">,</span>
</span><span class='line'>    <span class="n">authenticatorEncoder</span><span class="k">:</span> <span class="kt">AuthenticatorEncoder</span><span class="o">,</span>
</span><span class='line'>    <span class="n">idGenerator</span><span class="k">:</span> <span class="kt">IDGenerator</span><span class="o">,</span>
</span><span class='line'>    <span class="n">configuration</span><span class="k">:</span> <span class="kt">Configuration</span><span class="o">,</span>
</span><span class='line'>    <span class="n">clock</span><span class="k">:</span> <span class="kt">Clock</span><span class="o">)</span><span class="k">:</span> <span class="kt">AuthenticatorService</span><span class="o">[</span><span class="kt">JWTAuthenticator</span><span class="o">]</span> <span class="k">=</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">val</span> <span class="n">config</span> <span class="k">=</span> <span class="nc">JWTAuthenticatorSettings</span><span class="o">(</span>
</span><span class='line'>      <span class="n">fieldName</span> <span class="k">=</span> <span class="n">configuration</span><span class="o">.</span><span class="n">underlying</span><span class="o">.</span><span class="n">as</span><span class="o">[</span><span class="kt">String</span><span class="o">](</span><span class="s">&quot;silhouette.authenticator.headerName&quot;</span><span class="o">),</span>
</span><span class='line'>      <span class="n">issuerClaim</span> <span class="k">=</span> <span class="n">configuration</span><span class="o">.</span><span class="n">underlying</span><span class="o">.</span><span class="n">as</span><span class="o">[</span><span class="kt">String</span><span class="o">](</span><span class="s">&quot;silhouette.authenticator.issuerClaim&quot;</span><span class="o">),</span>
</span><span class='line'>      <span class="n">authenticatorExpiry</span> <span class="k">=</span> <span class="n">configuration</span><span class="o">.</span><span class="n">underlying</span><span class="o">.</span><span class="n">as</span><span class="o">[</span><span class="kt">FiniteDuration</span><span class="o">](</span><span class="s">&quot;silhouette.authenticator.authenticatorExpiry&quot;</span><span class="o">),</span>
</span><span class='line'>      <span class="n">sharedSecret</span> <span class="k">=</span> <span class="n">configuration</span><span class="o">.</span><span class="n">underlying</span><span class="o">.</span><span class="n">as</span><span class="o">[</span><span class="kt">String</span><span class="o">](</span><span class="s">&quot;silhouette.authenticator.sharedSecret&quot;</span><span class="o">))</span>
</span><span class='line'>    <span class="k">new</span> <span class="nc">JWTAuthenticatorService</span><span class="o">(</span><span class="n">config</span><span class="o">,</span> <span class="nc">None</span><span class="o">,</span> <span class="n">authenticatorEncoder</span><span class="o">,</span> <span class="n">idGenerator</span><span class="o">,</span> <span class="n">clock</span><span class="o">)</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Provides</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">provideEnvironment</span><span class="o">(</span>
</span><span class='line'>    <span class="n">userService</span><span class="k">:</span> <span class="kt">UserService</span><span class="o">,</span>
</span><span class='line'>    <span class="n">authenticatorService</span><span class="k">:</span> <span class="kt">AuthenticatorService</span><span class="o">[</span><span class="kt">JWTAuthenticator</span><span class="o">],</span>
</span><span class='line'>    <span class="n">eventBus</span><span class="k">:</span> <span class="kt">EventBus</span><span class="o">)</span><span class="k">:</span> <span class="kt">Environment</span><span class="o">[</span><span class="kt">JWTEnv</span><span class="o">]</span> <span class="k">=</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nc">Environment</span><span class="o">[</span><span class="kt">JWTEnv</span><span class="o">](</span>
</span><span class='line'>      <span class="n">userService</span><span class="o">,</span>
</span><span class='line'>      <span class="n">authenticatorService</span><span class="o">,</span>
</span><span class='line'>      <span class="nc">Seq</span><span class="o">.</span><span class="n">empty</span><span class="o">,</span>
</span><span class='line'>      <span class="n">eventBus</span>
</span><span class='line'>    <span class="o">)</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Provides</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">provideAvatarService</span><span class="o">(</span><span class="n">httpLayer</span><span class="k">:</span> <span class="kt">HTTPLayer</span><span class="o">)</span><span class="k">:</span> <span class="kt">AvatarService</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">GravatarService</span><span class="o">(</span><span class="n">httpLayer</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Provides</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">provideGoogleProvider</span><span class="o">(</span>
</span><span class='line'>    <span class="n">httpLayer</span><span class="k">:</span> <span class="kt">HTTPLayer</span><span class="o">,</span>
</span><span class='line'>    <span class="n">stateProvider</span><span class="k">:</span> <span class="kt">OAuth2StateProvider</span><span class="o">,</span>
</span><span class='line'>    <span class="n">configuration</span><span class="k">:</span> <span class="kt">Configuration</span><span class="o">)</span><span class="k">:</span> <span class="kt">GoogleProvider</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">new</span> <span class="nc">GoogleProvider</span><span class="o">(</span><span class="n">httpLayer</span><span class="o">,</span> <span class="n">stateProvider</span><span class="o">,</span> <span class="n">configuration</span><span class="o">.</span><span class="n">underlying</span><span class="o">.</span><span class="n">as</span><span class="o">[</span><span class="kt">OAuth2Settings</span><span class="o">](</span><span class="s">&quot;silhouette.google&quot;</span><span class="o">))</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>  核心：bind[<em>Silhouette</em>[JWTEnv]].to[<em>SilhouetteProvider</em>[JWTEnv]]</p>

<figure class='code'><figcaption><span>SilhouetteProvider 在库中定义 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">class</span> <span class="nc">SilhouetteProvider</span><span class="o">[</span><span class="kt">E</span> <span class="k">&lt;:</span> <span class="kt">Env</span><span class="o">]</span> <span class="nc">@Inject</span><span class="o">()</span> <span class="o">(</span>
</span><span class='line'>  <span class="k">val</span> <span class="n">env</span><span class="k">:</span> <span class="kt">Environment</span><span class="o">[</span><span class="kt">E</span><span class="o">],</span>
</span><span class='line'>  <span class="k">val</span> <span class="n">securedAction</span><span class="k">:</span> <span class="kt">SecuredAction</span><span class="o">,</span>
</span><span class='line'>  <span class="k">val</span> <span class="n">unsecuredAction</span><span class="k">:</span> <span class="kt">UnsecuredAction</span><span class="o">,</span>
</span><span class='line'>  <span class="k">val</span> <span class="n">userAwareAction</span><span class="k">:</span> <span class="kt">UserAwareAction</span><span class="o">)</span>
</span><span class='line'>  <span class="k">extends</span> <span class="nc">Silhouette</span><span class="o">[</span><span class="kt">E</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 配置类提供了其所需要的 Environment</span>
</span><span class='line'><span class="nd">@Provides</span>
</span><span class='line'><span class="k">def</span> <span class="n">provideEnvironment</span><span class="o">(</span>
</span><span class='line'>  <span class="n">userService</span><span class="k">:</span> <span class="kt">UserService</span><span class="o">,</span>
</span><span class='line'>  <span class="n">authenticatorService</span><span class="k">:</span> <span class="kt">AuthenticatorService</span><span class="o">[</span><span class="kt">JWTAuthenticator</span><span class="o">],</span>
</span><span class='line'>  <span class="n">eventBus</span><span class="k">:</span> <span class="kt">EventBus</span><span class="o">)</span><span class="k">:</span> <span class="kt">Environment</span><span class="o">[</span><span class="kt">JWTEnv</span><span class="o">]</span> <span class="k">=</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nc">Environment</span><span class="o">[</span><span class="kt">JWTEnv</span><span class="o">](</span>
</span><span class='line'>    <span class="n">userService</span><span class="o">,</span>
</span><span class='line'>    <span class="n">authenticatorService</span><span class="o">,</span>
</span><span class='line'>    <span class="nc">Seq</span><span class="o">.</span><span class="n">empty</span><span class="o">,</span>
</span><span class='line'>    <span class="n">eventBus</span>
</span><span class='line'>  <span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>在 play 配置文件中启用 SilhouetteModule 模块</li>
</ul>


<figure class='code'><figcaption><span>application.conf </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="n">play</span><span class="o">.</span><span class="n">modules</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">enabled</span> <span class="o">+=</span> <span class="s">&quot;modules.SilhouetteModule&quot;</span>
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>注册、登录时生成 (新)token</li>
</ul>


<figure class='code'><figcaption><span>依赖的库源码 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">case</span> <span class="k">class</span> <span class="nc">HornIdentity</span><span class="o">(</span>
</span><span class='line'>    <span class="n">userID</span><span class="k">:</span> <span class="kt">String</span><span class="o">,</span>
</span><span class='line'>    <span class="n">email</span><span class="k">:</span> <span class="kt">Option</span><span class="o">[</span><span class="kt">String</span><span class="o">],</span>
</span><span class='line'>    <span class="n">userName</span><span class="k">:</span> <span class="kt">String</span><span class="o">,</span>
</span><span class='line'>    <span class="n">displayName</span><span class="k">:</span> <span class="kt">String</span><span class="o">,</span>
</span><span class='line'>    <span class="n">avatarUrl</span><span class="k">:</span> <span class="kt">String</span><span class="o">,</span>
</span><span class='line'>    <span class="n">isVerified</span><span class="k">:</span> <span class="kt">Boolean</span><span class="o">,</span>
</span><span class='line'>    <span class="n">jwtVersion</span><span class="k">:</span> <span class="kt">String</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">trait</span> <span class="nc">JWTEnv</span> <span class="k">extends</span> <span class="nc">Env</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">type</span> <span class="kt">I</span> <span class="o">=</span> <span class="nc">HornIdentity</span>
</span><span class='line'>  <span class="k">type</span> <span class="kt">A</span> <span class="o">=</span> <span class="nc">JWTAuthenticator</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">trait</span> <span class="nc">ExpirableAuthenticator</span> <span class="k">extends</span> <span class="nc">Authenticator</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">val</span> <span class="n">lastUsedDateTime</span><span class="k">:</span> <span class="kt">DateTime</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">val</span> <span class="n">expirationDateTime</span><span class="k">:</span> <span class="kt">DateTime</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">val</span> <span class="n">idleTimeout</span><span class="k">:</span> <span class="kt">Option</span><span class="o">[</span><span class="kt">FiniteDuration</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">override</span> <span class="k">def</span> <span class="n">isValid</span> <span class="k">=</span> <span class="o">!</span><span class="n">isExpired</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">isTimedOut</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="n">isExpired</span> <span class="k">=</span> <span class="n">expirationDateTime</span><span class="o">.</span><span class="n">isBeforeNow</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="n">isTimedOut</span> <span class="k">=</span> <span class="n">idleTimeout</span><span class="o">.</span><span class="n">isDefined</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">lastUsedDateTime</span> <span class="o">+</span> <span class="n">idleTimeout</span><span class="o">.</span><span class="n">get</span><span class="o">).</span><span class="n">isBeforeNow</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">case</span> <span class="k">class</span> <span class="nc">LoginInfo</span><span class="o">(</span><span class="n">providerID</span><span class="k">:</span> <span class="kt">String</span><span class="o">,</span> <span class="n">providerKey</span><span class="k">:</span> <span class="kt">String</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">case</span> <span class="k">class</span> <span class="nc">JWTAuthenticator</span><span class="o">(</span>
</span><span class='line'>  <span class="n">id</span><span class="k">:</span> <span class="kt">String</span><span class="o">,</span>
</span><span class='line'>  <span class="n">loginInfo</span><span class="k">:</span> <span class="kt">LoginInfo</span><span class="o">,</span>
</span><span class='line'>  <span class="n">lastUsedDateTime</span><span class="k">:</span> <span class="kt">DateTime</span><span class="o">,</span>
</span><span class='line'>  <span class="n">expirationDateTime</span><span class="k">:</span> <span class="kt">DateTime</span><span class="o">,</span>
</span><span class='line'>  <span class="n">idleTimeout</span><span class="k">:</span> <span class="kt">Option</span><span class="o">[</span><span class="kt">FiniteDuration</span><span class="o">],</span>
</span><span class='line'>  <span class="n">customClaims</span><span class="k">:</span> <span class="kt">Option</span><span class="o">[</span><span class="kt">JsObject</span><span class="o">]</span> <span class="k">=</span> <span class="nc">None</span><span class="o">)</span>
</span><span class='line'>  <span class="k">extends</span> <span class="nc">StorableAuthenticator</span> <span class="k">with</span> <span class="nc">ExpirableAuthenticator</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">   * The Type of the generated value an authenticator will be serialized to.</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="k">override</span> <span class="k">type</span> <span class="kt">Value</span> <span class="o">=</span> <span class="nc">String</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">trait</span> <span class="nc">AuthenticatorService</span><span class="o">[</span><span class="kt">T</span> <span class="k">&lt;:</span> <span class="kt">Authenticator</span><span class="o">]</span> <span class="nc">extends</span> <span class="nc">ExecutionContextProvider</span> <span class="o">{</span>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">   * Creates a new authenticator for the specified login info.</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">create</span><span class="o">(</span><span class="n">loginInfo</span><span class="k">:</span> <span class="kt">LoginInfo</span><span class="o">)(</span><span class="k">implicit</span> <span class="n">request</span><span class="k">:</span> <span class="kt">RequestHeader</span><span class="o">)</span><span class="k">:</span> <span class="kt">Future</span><span class="o">[</span><span class="kt">T</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">   * Retrieves the authenticator from request.</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">retrieve</span><span class="o">[</span><span class="kt">B</span><span class="o">](</span><span class="k">implicit</span> <span class="n">request</span><span class="k">:</span> <span class="kt">ExtractableRequest</span><span class="o">[</span><span class="kt">B</span><span class="o">])</span><span class="k">:</span> <span class="kt">Future</span><span class="o">[</span><span class="kt">Option</span><span class="o">[</span><span class="kt">T</span><span class="o">]]</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">   * Initializes an authenticator and instead of embedding into the the request or result, it returns</span>
</span><span class='line'><span class="cm">   * the serialized value.</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">init</span><span class="o">(</span><span class="n">authenticator</span><span class="k">:</span> <span class="kt">T</span><span class="o">)(</span><span class="k">implicit</span> <span class="n">request</span><span class="k">:</span> <span class="kt">RequestHeader</span><span class="o">)</span><span class="k">:</span> <span class="kt">Future</span><span class="o">[</span><span class="kt">T</span><span class="k">#</span><span class="kt">Value</span><span class="o">]</span>
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>主代码 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">class</span> <span class="nc">UserController</span> <span class="nd">@Inject</span><span class="o">()(</span><span class="n">userService</span><span class="k">:</span> <span class="kt">UserService</span><span class="o">,</span> <span class="n">silhouette</span><span class="k">:</span> <span class="kt">Silhouette</span><span class="o">[</span><span class="kt">JWTEnv</span><span class="o">])</span> <span class="k">extends</span> <span class="nc">Controller</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">signin</span> <span class="k">=</span> <span class="nc">Action</span><span class="o">.</span><span class="n">async</span><span class="o">(</span><span class="n">parse</span><span class="o">.</span><span class="n">json</span><span class="o">)</span> <span class="o">{</span> <span class="k">implicit</span> <span class="n">request</span> <span class="k">=&gt;</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'>    <span class="c1">// 按某种加密算法校验邮箱密码是否正确，是的话返回用户信息</span>
</span><span class='line'>    <span class="n">userService</span><span class="o">.</span><span class="n">authenticate</span><span class="o">(</span><span class="n">email</span><span class="o">,</span> <span class="n">password</span><span class="o">).</span><span class="n">map</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">case</span> <span class="nc">Some</span><span class="o">(</span><span class="n">user</span><span class="o">)</span> <span class="k">=&gt;</span>
</span><span class='line'>        <span class="o">(</span><span class="k">for</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">loginID</span> <span class="k">&lt;-</span> <span class="n">userService</span><span class="o">.</span><span class="n">login</span><span class="o">(</span><span class="n">user</span><span class="o">,</span> <span class="n">deviceType</span><span class="o">,</span> <span class="n">deviceID</span><span class="o">)</span>
</span><span class='line'>          <span class="cm">/**</span>
</span><span class='line'><span class="cm">          * create 的函数定义为： </span>
</span><span class='line'><span class="cm">          * def create(loginInfo: LoginInfo)(implicit request: RequestHeader): Future[T]</span>
</span><span class='line'><span class="cm">          * T 会被解析为 JWTEnv#A，且 type A = JWTAuthenticator，</span>
</span><span class='line'><span class="cm">          * 因此 authenticator 的类型为 JWTAuthenticator，</span>
</span><span class='line'><span class="cm">          * 同时给 authenticator 传入了自定义的 token 版本号</span>
</span><span class='line'><span class="cm">          *</span>
</span><span class='line'><span class="cm">          * init 的函数定义为：</span>
</span><span class='line'><span class="cm">          * def init(authenticator: T)(implicit request: RequestHeader): Future[T#Value]</span>
</span><span class='line'><span class="cm">          * 因此 token 类型为 JWTEnv#A#Value = JWTAuthenticator#Value = String，</span>
</span><span class='line'><span class="cm">          * 即是 JWTAuthenticator 为该 LoginInfo(providerID: String, providerKey: String) + jwtVersion 生成的一个令牌，</span>
</span><span class='line'><span class="cm">          * 其中只要有一项未通过服务器校验，token 即非法</span>
</span><span class='line'><span class="cm">          **/</span>
</span><span class='line'>          <span class="n">authenticator</span> <span class="k">&lt;-</span>
</span><span class='line'>            <span class="n">silhouette</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">authenticatorService</span>
</span><span class='line'>              <span class="o">.</span><span class="n">create</span><span class="o">(</span><span class="nc">LoginInfo</span><span class="o">(</span><span class="nc">ProviderKey</span><span class="o">.</span><span class="n">waylens</span><span class="o">.</span><span class="n">id</span><span class="o">.</span><span class="n">toString</span><span class="o">,</span> <span class="n">user</span><span class="o">.</span><span class="n">userID</span><span class="o">))</span>
</span><span class='line'>              <span class="o">.</span><span class="n">map</span><span class="o">(</span><span class="k">_</span><span class="o">.</span><span class="n">copy</span><span class="o">(</span><span class="n">id</span> <span class="k">=</span> <span class="n">loginID</span><span class="o">.</span><span class="n">toString</span><span class="o">,</span> <span class="n">customClaims</span> <span class="k">=</span> <span class="nc">Some</span><span class="o">(</span><span class="nc">JsObject</span><span class="o">(</span><span class="nc">Map</span><span class="o">(</span><span class="s">&quot;version&quot;</span><span class="o">-&gt;</span> <span class="nc">JsString</span><span class="o">(</span><span class="n">user</span><span class="o">.</span><span class="n">jwtVersion</span><span class="o">))))))</span>
</span><span class='line'>          <span class="n">token</span> <span class="k">&lt;-</span> <span class="n">silhouette</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">authenticatorService</span><span class="o">.</span><span class="n">init</span><span class="o">(</span><span class="n">authenticator</span><span class="o">)</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">yield</span> <span class="o">(</span><span class="n">token</span><span class="o">,</span> <span class="n">authenticator</span><span class="o">)).</span><span class="n">map</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">case</span> <span class="o">(</span><span class="n">token</span><span class="o">,</span> <span class="n">authenticator</span><span class="o">)</span> <span class="k">=&gt;</span>
</span><span class='line'>            <span class="k">val</span> <span class="n">res</span> <span class="k">=</span> <span class="nc">SigninResponse</span><span class="o">(</span>
</span><span class='line'>              <span class="n">user</span><span class="o">.</span><span class="n">identity</span><span class="o">.</span><span class="n">waylensUser</span><span class="o">,</span>
</span><span class='line'>              <span class="n">token</span><span class="o">,</span>
</span><span class='line'>              <span class="c1">// 同时返回 token 有效时长</span>
</span><span class='line'>              <span class="n">authenticator</span><span class="o">.</span><span class="n">expirationDateTime</span><span class="o">.</span><span class="n">getMillis</span> <span class="o">/</span> <span class="mi">1000</span> <span class="o">*</span> <span class="mi">1000</span><span class="o">)</span>
</span><span class='line'>            <span class="n">ok</span><span class="o">(</span><span class="n">res</span><span class="o">)</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>      <span class="k">case</span> <span class="nc">None</span> <span class="k">=&gt;</span> <span class="o">...</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>核心小结</p>

<ol>
<li><p>后台随机生成 userID ，组装成 <strong>LoginInfo</strong></p></li>
<li><p><strong>AuthenticatorService.create</strong>(loginInfo) 得到 <strong>JWTAuthenticator</strong>， 接着可以向它塞进 <em>JWTVersion</em> 等客制化校验信息</p></li>
<li><p><strong>AuthenticatorService.init</strong>(jwtAuthenticator) 得到 token，这里会按 JWTAuthenticator 的类型对 jwtAuthenticator 所携带信息（LoginInfo, JWTVersion 等）进行加密得到一个 JWT（<strong>header.payload.secret</strong>）</p></li>
<li><p>userID -> LoginInfo -> JWTAuthenticator -> token</p></li>
</ol>
</li>
</ul>


<figure class='code'><figcaption><span>让我再看你一遍 JWTAuthenticator </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="nc">JWTAuthenticator</span><span class="o">(</span>
</span><span class='line'>  <span class="n">id</span><span class="k">:</span> <span class="kt">String</span><span class="o">,</span>
</span><span class='line'>  <span class="n">loginInfo</span><span class="k">:</span> <span class="kt">LoginInfo</span><span class="o">,</span>
</span><span class='line'>  <span class="n">lastUsedDateTime</span><span class="k">:</span> <span class="kt">DateTime</span><span class="o">,</span>
</span><span class='line'>  <span class="n">expirationDateTime</span><span class="k">:</span> <span class="kt">DateTime</span><span class="o">,</span>
</span><span class='line'>  <span class="n">idleTimeout</span><span class="k">:</span> <span class="kt">Option</span><span class="o">[</span><span class="kt">FiniteDuration</span><span class="o">],</span>
</span><span class='line'>  <span class="n">customClaims</span><span class="k">:</span> <span class="kt">Option</span><span class="o">[</span><span class="kt">JsObject</span><span class="o">]</span> <span class="k">=</span> <span class="nc">None</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如文]]></title>
    <link href="http://kdcc.github.io/blog/2016/05/28/test/"/>
    <updated>2016-05-28T16:43:10+08:00</updated>
    <id>http://kdcc.github.io/blog/2016/05/28/test</id>
    <content type="html"><![CDATA[<p>THis is a testing blog.</p>
]]></content>
  </entry>
  
</feed>
